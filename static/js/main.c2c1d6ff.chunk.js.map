{"version":3,"sources":["components/Home.js","components/MapComponent.js","media/bike-animated.gif","components/Toilets.js","components/Weather.js","media/copenhagen_street_16_9.jpg","App.js","index.js"],"names":["Home","className","to","weekdays","MapComponent","data","useState","center","setCenter","zoom","setZoom","infoText","setInfoText","Date","getDay","today","height","zoomSnap","map","geometry","properties","id","anchor","coordinates","color","payload","onClick","console","log","onMarkerClick","adresse","handicapadgang","Toilets","useQuery","fetch","then","res","json","isLoading","error","src","loadingImage","alt","features","dayMapping","0","1","2","3","4","5","6","Weather","current","condition","text","temp_c","wind_kph","toFixed","wind_dir","gust_kph","forecast","forecastday","slice","index","day","icon","avgtemp_c","queryClient","QueryClient","App","QueryClientProvider","client","background","path","exact","match","CSSTransition","in","timeout","classNames","unmountOnExit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2c1d6ff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1 className=\"header\">COPENHAGEN</h1>\r\n      <Link\r\n        to=\"/copenhagen/toilets\"\r\n        className=\"left-arrow arrow noselect\"\r\n      ></Link>\r\n      <Link to=\"/copenhagen/toilets\" className=\"left-link\">\r\n        Toilets\r\n      </Link>\r\n      <Link to=\"/copenhagen/weather\" className=\"right-link\">\r\n        Weather\r\n      </Link>\r\n      <Link\r\n        to=\"/copenhagen/weather\"\r\n        className=\"right-arrow arrow noselect\"\r\n      ></Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Map, Marker, ZoomControl } from \"pigeon-maps\";\r\n\r\nconst weekdays = [\r\n  \"soendag\",\r\n  \"mandag\",\r\n  \"tirsdag\",\r\n  \"onsdag\",\r\n  \"torsdag\",\r\n  \"fredag\",\r\n  \"loerdag\",\r\n];\r\n\r\nexport default function MapComponent({ data }) {\r\n  const [center, setCenter] = useState([55.682, 12.58]);\r\n  const [zoom, setZoom] = useState(12.5);\r\n  const [infoText, setInfoText] = useState({});\r\n  const [today] = useState(weekdays[new Date().getDay()]);\r\n\r\n  const onMarkerClick = ({ anchor, payload }) => {\r\n    setCenter(anchor);\r\n    setZoom(15);\r\n    setInfoText(payload);\r\n    console.log(payload);\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <Map height={300} center={center} zoom={zoom} zoomSnap={false}>\r\n        {data.map(({ geometry, properties, id }) => (\r\n          <Marker\r\n            key={id}\r\n            anchor={[geometry.coordinates[0][1], geometry.coordinates[0][0]]}\r\n            color={\"#f9bac5\"}\r\n            payload={properties}\r\n            onClick={(payload) => onMarkerClick(payload)}\r\n          />\r\n        ))}\r\n        <ZoomControl />\r\n      </Map>\r\n      <div className=\"toilet-info\">\r\n        Adresse: {infoText.adresse} <br />\r\n        <br />\r\n        Handicap adgang: {infoText.handicapadgang}\r\n        <br /> <br />\r\n        Åbningstid i dag: {infoText[today]}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bike-animated.f6af4639.gif\";","import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MapComponent from \"./MapComponent\";\r\nimport loadingImage from \"../media/bike-animated.gif\";\r\n\r\nexport default function Toilets() {\r\n  const { isLoading, error, data } = useQuery(\"toiletData\", () =>\r\n    fetch(\r\n      \"https://wfs-kbhkort.kk.dk/k101/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=k101:toilet_tmf_kk&outputFormat=json&SRSNAME=EPSG:4326\"\r\n    ).then((res) => res.json())\r\n  );\r\n\r\n  if (isLoading)\r\n    return (\r\n      <div>\r\n        <img src={loadingImage} alt=\"Loading your data :)\" />\r\n      </div>\r\n    );\r\n\r\n  if (error) return \"Error\" + error.data;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"toilet-card\">\r\n        <MapComponent data={data.features} />\r\n        <p>\r\n          Inneholder data, som er stillet til rådighet af en af\r\n          medlemsorganisationene i Open Data DK\r\n        </p>\r\n      </div>\r\n      <Link to=\"/copenhagen\" className=\"right-arrow arrow noselect\"></Link>\r\n      <Link to=\"/copenhagen\" className=\"right-link\">\r\n        Home\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\n// <div className=\"map-container\">\r\n// <div className=\"billboard\">\r\n//   <MapComponent data={data.features} />\r\n// </div>\r\n// <p>\r\n//   Inneholder data, som er stillet til rådighet af en af\r\n//   medlemsorganisationene i Open Data DK\r\n// </p>\r\n// <Link to=\"/\" className=\"right-arrow arrow noselect\"></Link>\r\n// <Link to=\"/\" className=\"right-link\">\r\n//   Home\r\n// </Link>\r\n// </div>\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport loadingImage from \"../media/bike-animated.gif\";\r\n\r\nconst today = new Date().getDay();\r\nconst dayMapping = {\r\n  0: \"Sun\",\r\n  1: \"Mon\",\r\n  2: \"Tue\",\r\n  3: \"Wed\",\r\n  4: \"Thu\",\r\n  5: \"Fri\",\r\n  6: \"Sat\",\r\n};\r\n\r\nexport default function Weather() {\r\n  const { isLoading, error, data } = useQuery(\"weatherData\", () =>\r\n    fetch(\r\n      \"https://api.weatherapi.com/v1/forecast.json?key=eb86fa637f4c4666ab570733210809&q=copenhagen&days=5&aqi=no&alerts=no&hour=0\"\r\n    ).then((res) => res.json())\r\n  );\r\n\r\n  if (isLoading)\r\n    return (\r\n      <div>\r\n        <img src={loadingImage} alt=\"Loading your data :)\" />\r\n      </div>\r\n    );\r\n\r\n  if (error) return \"Error\" + error.data;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"weather-card\">\r\n        <div className=\"weather-card-row\">\r\n          <div className=\"current-weather\">\r\n            <h3>Today</h3>\r\n            <img\r\n              src=\"https://cdn.weatherapi.com/weather/128x128/day/116.png\"\r\n              alt={data.current.condition.text}\r\n            />\r\n            <p>{data.current.condition.text}</p>\r\n            <p>{data.current.temp_c} °C</p>\r\n          </div>\r\n          <div className=\"wind-data\">\r\n            <h4>Wind:</h4>\r\n            <br />\r\n            <span>\r\n              Velocity: {(data.current.wind_kph * 0.27778).toFixed(2)} m/s\r\n            </span>\r\n            <span>Direction: {data.current.wind_dir}</span>\r\n            <span>\r\n              Direction: {(data.current.gust_kph * 0.27778).toFixed(2)} m/s\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"weather-card-row\">\r\n          {data.forecast.forecastday.slice(1).map(({ day }, index) => (\r\n            <div className=\"forecast-day\">\r\n              <span>{dayMapping[(today + index + 1) % 7]}</span>\r\n\r\n              <img src={day.condition.icon} alt={day.condition.text} />\r\n\r\n              <span>{day.avgtemp_c} °C</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Link to=\"/copenhagen\" className=\"left-arrow arrow noselect\"></Link>\r\n      <Link to=\"/copenhagen\" className=\"left-link\">\r\n        Toilets\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/copenhagen_street_16_9.27e25f31.jpg\";","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./App.css\";\n\nimport Home from \"./components/Home\";\nimport Toilets from \"./components/Toilets\";\nimport Weather from \"./components/Weather\";\nimport background from \"./media/copenhagen_street_16_9.jpg\";\n\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <Switch>\n          <div className=\"app\">\n            <img\n              src={background}\n              className=\"app-background\"\n              alt=\"Man brushing his teeth out the window on the streets of Copenhagen\"\n            />\n            <Route path=\"/copenhagen/\" exact>\n              {({ match }) => (\n                <CSSTransition\n                  in={match != null}\n                  timeout={1000}\n                  classNames=\"page\"\n                  unmountOnExit\n                >\n                  <div className=\"page\">\n                    <Home />\n                  </div>\n                </CSSTransition>\n              )}\n            </Route>\n            <Route path=\"/copenhagen/toilets\">\n              {({ match }) => (\n                <CSSTransition\n                  in={match != null}\n                  timeout={1000}\n                  classNames=\"toilet-page\"\n                  unmountOnExit\n                >\n                  <div className=\"toilet-page\">\n                    <Toilets />\n                  </div>\n                </CSSTransition>\n              )}\n            </Route>\n            <Route path=\"/copenhagen/weather\">\n              {({ match }) => (\n                <CSSTransition\n                  in={match != null}\n                  timeout={1000}\n                  classNames=\"weather-page\"\n                  unmountOnExit\n                >\n                  <div className=\"weather-page\">\n                    <Weather />\n                  </div>\n                </CSSTransition>\n              )}\n            </Route>\n          </div>\n        </Switch>\n      </Router>\n    </QueryClientProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}